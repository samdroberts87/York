name: Terraform Deployment

on:
  push:
    branches:
      - main  # Trigger on every push to the main branch

env:
  TF_VERSION: 1.5.7

jobs:
  terraform:
    name: Terraform VPC and EC2 Deployment Plan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Initialize Terraform (Main)
        working-directory: terraform
        run: terraform init -backend-config="bucket=york-demo-tf-state-bucket-storage" -backend-config="key=terraform.tfstate" -backend-config="region=${{ secrets.AWS_REGION }}" -backend-config="encrypt=true"

      - name: Mock the S3 Bucket (Temporary)
        run: |
          # Mock the existence of the S3 bucket for the terraform plan phase
          BUCKET_EXISTS=$(aws s3api head-bucket --bucket york-demo-tf-state-bucket-storage --region ${{ secrets.AWS_REGION }} 2>&1 || true)
          if [[ "$BUCKET_EXISTS" == *"NotFound"* ]]; then
            echo "Bucket does not exist, creating a mock bucket for planning."
            aws s3 mb s3://york-demo-tf-state-bucket-storage --region ${{ secrets.AWS_REGION }}
          else
            echo "Bucket exists, proceeding."
          fi

      - name: Validate Terraform Code
        working-directory: terraform
        run: terraform validate

      - name: Plan Terraform Changes (Only Plan, Do Not Apply)
        working-directory: terraform
        run: terraform plan -var-file=${{ github.event.inputs.environment }}.tfvars

      - name: Cleanup Mock Bucket
        run: |
          # Cleanup the mock bucket after the plan
          BUCKET_EXISTS=$(aws s3api head-bucket --bucket york-demo-tf-state-bucket-storage --region ${{ secrets.AWS_REGION }} 2>&1 || true)
          if [[ "$BUCKET_EXISTS" == *"NotFound"* ]]; then
            echo "Mock bucket already cleaned up."
          else
            echo "Cleaning up mock bucket."
            aws s3 rb s3://york-demo-tf-state-bucket-storage --force --region ${{ secrets.AWS_REGION }}
          fi
