name: CI Terraform Plan

on:
  push:
    branches:
      - main

env:
  TF_VERSION: 1.5.7
  BUCKET_NAME: york-demo-tf-state-bucket-storage-mock
  AWS_ROLE_ARN: ${{ secrets.TFDEV_ROLE_ARN }} # Always assume the Dev role

jobs:
  terraform:
    name: Terraform VPC and EC2 Deployment Plan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          role-session-name: GitHubActionsSession
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Create Temp S3 Backend (Temporary)
        run: |
          if aws s3api head-bucket --bucket "$BUCKET_NAME" 2>/dev/null; then
            echo "Bucket already exists."
          else
            aws s3 mb s3://"$BUCKET_NAME" --region ${{ secrets.AWS_REGION }}
            echo "Bucket created."
          fi

      - name: Initialize Terraform (Main)
        working-directory: terraform
        run: terraform init -backend-config="bucket=${{ env.BUCKET_NAME }}" -backend-config="key=terraform.tfstate" -backend-config="region=${{ secrets.AWS_REGION }}" -backend-config="encrypt=true"

      - name: Validate Terraform Code
        working-directory: terraform
        run: terraform validate

      - name: Plan Terraform Changes Dev
        working-directory: terraform
        run: terraform plan -var-file=dev.tfvars

      - name: Plan Terraform Changes Staging
        working-directory: terraform
        run: terraform plan -var-file=staging.tfvars

      - name: Plan Terraform Changes Prod
        working-directory: terraform
        run: terraform plan -var-file=prod.tfvars

      - name: Cleanup Mock Bucket
        run: |
          if aws s3api head-bucket --bucket "$BUCKET_NAME" 2>/dev/null; then
            aws s3 rm s3://"$BUCKET_NAME" --recursive
            aws s3 rb s3://"$BUCKET_NAME" --force
            echo "Mock bucket deleted."
          else
            echo "Mock bucket not found, skipping cleanup."
          fi
