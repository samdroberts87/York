name: Terraform Destroy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod

env:
  TF_VERSION: 1.10.5

jobs:
  destroy-infrastructure:
    permissions:
      id-token: write 
      contents: read 
    name: Destroy Terraform Infrastructure (excluding S3 backend)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS Credentials (Assume Management Account Role)
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.MANAGEMENT_ACCOUNT }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Assume Role Based on Environment
        id: assume_role
        run: |
          GITHUB_ENVIRONMENT="${{ github.event.inputs.environment }}"
          echo "Selected environment: ${GITHUB_ENVIRONMENT}"

          if [ "$GITHUB_ENVIRONMENT" = "dev" ]; then
            ROLE_ARN="${{ secrets.TFDEV_ROLE_ARN }}"
          elif [ "$GITHUB_ENVIRONMENT" = "staging" ]; then
            ROLE_ARN="${{ secrets.TFSTAGING_ROLE_ARN }}"
          elif [ "$GITHUB_ENVIRONMENT" = "prod" ]; then
            ROLE_ARN="${{ secrets.TFPROD_ROLE_ARN }}"
          else
            echo "Error: Unknown environment: ${GITHUB_ENVIRONMENT}"
            exit 1
          fi

          echo "Assuming role for $GITHUB_ENVIRONMENT"
          
          CREDS=$(aws sts assume-role --role-arn $ROLE_ARN --role-session-name TerraformSession)
          export AWS_ACCESS_KEY_ID=$(echo "$CREDS" | jq -r .Credentials.AccessKeyId)
          export AWS_SECRET_ACCESS_KEY=$(echo "$CREDS" | jq -r .Credentials.SecretAccessKey)
          export AWS_SESSION_TOKEN=$(echo "$CREDS" | jq -r .Credentials.SessionToken)
          
          echo "Role assumed successfully."


      - name: Initialize Terraform (Main)
        working-directory: terraform
        run: terraform init -backend-config="bucket=yorkshire-demo-tf-state-bucket-storage" -backend-config="key=terraform.tfstate" -backend-config="region=${{ secrets.AWS_REGION }}" -backend-config="encrypt=true"

      - name: Plan Terraform Destroy
        working-directory: terraform
        run: terraform plan -destroy -var-file=${{ github.event.inputs.environment }}.tfvars

      - name: Apply Terraform Destroy
        working-directory: terraform
        run: terraform destroy -auto-approve -var-file=${{ github.event.inputs.environment }}.tfvars
