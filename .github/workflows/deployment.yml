name: Terraform Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod

env:
  TF_VERSION: 1.10.5

jobs:
  create-backend:
    permissions:
      id-token: write 
      contents: read 
    name: Create Terraform Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Backend Code
        uses: actions/checkout@v4
        with:
          path: terraform-backend

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS Credentials (Assume Management Account Role)
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.MANAGEMENT_ACCOUNT }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Initialize Terraform (Backend)
        working-directory: terraform-backend/terraform-backend
        run: terraform init

      - name: Apply Terraform (Create Backend)
        working-directory: terraform-backend/terraform-backend
        run: terraform apply -auto-approve

  terraform:
    permissions:
      id-token: write 
      contents: read 
    name: Terraform VPC and EC2 Deployment
    runs-on: ubuntu-latest
    needs: create-backend
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Assume Role Based on Environment
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets["TF" + github.event.inputs.environment | capitalize + "_ROLE_ARN"] }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Initialize Terraform (Main)
        working-directory: terraform
        run: terraform init -backend-config="bucket=york-demo-tf-state-bucket-storage" -backend-config="key=terraform.tfstate" -backend-config="region=${{ secrets.AWS_REGION }}" -backend-config="encrypt=true"

      - name: Validate Terraform Code
        working-directory: terraform
        run: terraform validate

      - name: Plan Terraform Changes
        working-directory: terraform
        run: terraform plan -var-file=${{ github.event.inputs.environment }}.tfvars

      - name: Apply Terraform (Only on Main)
        if: github.ref == 'refs/heads/main'
        working-directory: terraform
        run: terraform apply -auto-approve -var-file=${{ github.event.inputs.environment }}.tfvars
